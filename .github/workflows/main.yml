name: Build & Release

on:
  # Event will trigger job
  push:
    # branches:
    # - main
    tags:
      - "v*.*.*"

jobs:
  build:
    name: Build
    # Run on macos operating system
    runs-on: macos-12
    outputs:
      version: ${{ steps.extract_version.outputs.version }}
    steps:
      # Start clone from repo into macos
      - name: Clone repository
        uses: actions/checkout@v4

      # Extract version
      - name: Extract version
        id: extract_version
        run: |
          # From commit message
          # version=$(echo ${{ github.event.head_commit.message }} | grep -oP '(?<=Update: v)\d+\.\d+\.\d+')

          # From tag
          version=$(echo ${{ github.ref_name }} | sed -E 's/.*v([0-9]+\.[0-9]+\.[0-9]+).*/\1/')
          echo "version=${version}" >> $GITHUB_OUTPUT

      # Setup Java env
      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17.x"

      # Start clone from repo hcmue into macos
      - name: Clone src hcmue repository
        uses: actions/checkout@v4
        with:
          repository: datdonguyen99/hcmue
          token: ${{ secrets.REPO_HCMUE_SECRRET }}
          path: hcmue

      # Gradle cache for faster builds
      - name: Cache Gradle dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      # Setup Flutter env
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          flutter-version-file: pubspec.yaml # path to pubspec.yaml
          architecture: x64

      # Install Dependencies
      - name: Install depenencies
        run: flutter pub get
        working-directory: hcmue

      # Check for any formatting issues in the code.
      #   - name: Check code formatting
      # run: dart format --set-exit-if-changed .

      # Statically analyze the Dart code for any errors.
      #   - name: Analyze Dart code
      # run: flutter analyze .

      # Install Pod
      - name: Install Pod
        run: |
          cd hcmue/ios
          if [ -f Podfile.lock ]; then
            rm Podfile.lock
          fi
          pod deintegrate
          pod repo update
          pod install

      # Build IOS
      - name: Build ipa for IOS
        run: |
          cd hcmue
          flutter build ios --no-codesign
          cd build/ios/iphoneos
          mkdir Payload
          cd Payload
          ln -s ../Runner.app
          cd ..
          zip -r app.ipa Payload

      # Build Android for GitHub release
      # when use split-per-abi
      # - app-armeabi-v7a-release.apk: small file(most devices use this version)
      # - app-arm64-v8a.apk: medium file(new version e.g Sumsung)
      # - app-x86_64-release.apk: medium file(e.g intel)
      #   - name: Build arm64 APK
      # run: flutter build apk --release --split-per-abi --target-platform="android-arm64" --flavor github

      # Build universal APK
      - name: Build universal APK
        run: |
          cd hcmue
          flutter build apk --split-per-abi

      # Collect files built and upload to Github artifacts
      - name: Collect files built and upload to Github artifacts
        uses: actions/upload-artifact@v4
        with:
          name: app-release-github
          path: |
            # build/app/outputs/flutter-apk/app-arm64-v8a-github-release.apk
            # build/app/outputs/flutter-apk/app-github-release.apk
            hcmue/build/app/outputs/flutter-apk/*.apk
            hcmue/build/ios/iphoneos/app.ipa

  # Release job, upload the apk and ipa to github

#   release:
#     name: Release APK and IPA
#     needs: [build] # Need job [build] before
#     runs-on: macos-12
#     strategy:
#       matrix:
#         include:
#           - file: build/ios/iphoneos/app.ipa
#             asset_name: Elearning-ios # IPA
#             extension: ipa
#             prerelease: false
#           - file: build/app/outputs/flutter-apk/app-arm64-v8a-github-release.apk
#             asset_name: Elearning-arm64-v8a # arm64 generated APK
#             extension: apk
#             prerelease: false
#           - file: build/app/outputs/flutter-apk/app-github-release.apk
#             asset_name: Elearning # universal APK
#             extension: apk
#             prerelease: false

#     steps:
#       # Download files built and uploaded to artifact from job [build]
#       - name: Get app-release from artifacts
#         uses: actions/download-artifact@v4
#         with:
#           # Get from app-release-github
#           name: app-release-github
#           # Save to build folder
#           path: build
#           merge-multiple: true

#       # Release IPA and APK
#       - name: Release IPA and APK to Github
#         uses: svenstaro/upload-release-action@v2
#         with:
#           repo_name: datdonguyen99/Elearning
#           # Token repo, [setting -> developer settings -> personal access token]
#           repo_token: ${{ secrets.ELEARNING_SECRET_TOKEN }}
#           file: ${{ matrix.file }}
#           asset_name: ${{ matrix.asset_name }}-version-${{ needs.build.outputs.version }}.${{ matrix.extension }}
#           tag: ${{ needs.build.outputs.version }}
#           prerelease: ${{ matrix.prerelease }}
#           overwrite: true
